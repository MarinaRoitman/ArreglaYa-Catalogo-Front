name: Deploy Frontend to EC2

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch: {}

concurrency:
  group: deploy-front
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: desarrollo2-catalogos-front

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: desarrollo2-catalogos-front/package-lock.json

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        run: |
          npm run build
          # Vite -> dist/ ; CRA -> build/
          if [ -d "dist" ]; then
            echo "BUILD_DIR=dist" >> $GITHUB_ENV
          elif [ -d "build" ]; then
            echo "BUILD_DIR=build" >> $GITHUB_ENV
          else
            echo "No dist/ or build/ directory found" && exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: desarrollo2-catalogos-front/${{ env.BUILD_DIR }}

      - name: Download artifact (flatten)
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend-dist

      - name: Copy static assets to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "frontend-dist/*"
          target: "${{ secrets.EC2_PATH }}/dist"
          strip_components: 0
          overwrite: true
          rm: true

      - name: Restart Caddy on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd /home/ubuntu/catalogo
            docker compose restart caddy

